// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file mystiko/sequencer/v1/service.proto (package mystiko.sequencer.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from '@bufbuild/protobuf/codegenv1';
import { fileDesc, messageDesc, serviceDesc } from '@bufbuild/protobuf/codegenv1';
import type { Commitment, CommitmentStatus } from '../../data/v1/commitment_pb';
import { file_mystiko_data_v1_commitment } from '../../data/v1/commitment_pb';
import type { Nullifier } from '../../data/v1/nullifier_pb';
import { file_mystiko_data_v1_nullifier } from '../../data/v1/nullifier_pb';
import type { Message } from '@bufbuild/protobuf';

/**
 * Describes the file mystiko/sequencer/v1/service.proto.
 */
export const file_mystiko_sequencer_v1_service: GenFile =
  /*@__PURE__*/
  fileDesc(
    'CiJteXN0aWtvL3NlcXVlbmNlci92MS9zZXJ2aWNlLnByb3RvEhRteXN0aWtvLnNlcXVlbmNlci52MSKGAQoURmV0Y2hDb250cmFjdFJlcXVlc3QSGAoQY29udHJhY3RfYWRkcmVzcxgBIAEoDBIYCgtzdGFydF9ibG9jaxgCIAEoBEgAiAEBEhkKDHRhcmdldF9ibG9jaxgDIAEoBEgBiAEBQg4KDF9zdGFydF9ibG9ja0IPCg1fdGFyZ2V0X2Jsb2NrIrsBChVGZXRjaENvbnRyYWN0UmVzcG9uc2USGAoQY29udHJhY3RfYWRkcmVzcxgBIAEoDBITCgtzdGFydF9ibG9jaxgCIAEoBBIRCgllbmRfYmxvY2sYAyABKAQSMAoLY29tbWl0bWVudHMYBSADKAsyGy5teXN0aWtvLmRhdGEudjEuQ29tbWl0bWVudBIuCgpudWxsaWZpZXJzGAYgAygLMhoubXlzdGlrby5kYXRhLnYxLk51bGxpZmllciKxAQoRRmV0Y2hDaGFpblJlcXVlc3QSEAoIY2hhaW5faWQYASABKAQSEwoLc3RhcnRfYmxvY2sYAiABKAQSFAoMdGFyZ2V0X2Jsb2NrGAMgASgEEhQKB2lzX2Z1bGwYBCABKAhIAIgBARI9Cgljb250cmFjdHMYBSADKAsyKi5teXN0aWtvLnNlcXVlbmNlci52MS5GZXRjaENvbnRyYWN0UmVxdWVzdEIKCghfaXNfZnVsbCJmChJGZXRjaENoYWluUmVzcG9uc2USEAoIY2hhaW5faWQYASABKAQSPgoJY29udHJhY3RzGAMgAygLMisubXlzdGlrby5zZXF1ZW5jZXIudjEuRmV0Y2hDb250cmFjdFJlc3BvbnNlIlsKF0NoYWluTG9hZGVkQmxvY2tSZXF1ZXN0EhAKCGNoYWluX2lkGAEgASgEEhsKDndpdGhfY29udHJhY3RzGAIgASgISACIAQFCEQoPX3dpdGhfY29udHJhY3RzIogBChhDaGFpbkxvYWRlZEJsb2NrUmVzcG9uc2USEAoIY2hhaW5faWQYASABKAQSFAoMYmxvY2tfbnVtYmVyGAIgASgEEkQKCWNvbnRyYWN0cxgDIAMoCzIxLm15c3Rpa28uc2VxdWVuY2VyLnYxLkNvbnRyYWN0TG9hZGVkQmxvY2tSZXNwb25zZSJIChpDb250cmFjdExvYWRlZEJsb2NrUmVxdWVzdBIQCghjaGFpbl9pZBgBIAEoBBIYChBjb250cmFjdF9hZGRyZXNzGAIgASgMIl8KG0NvbnRyYWN0TG9hZGVkQmxvY2tSZXNwb25zZRIQCghjaGFpbl9pZBgBIAEoBBIYChBjb250cmFjdF9hZGRyZXNzGAIgASgMEhQKDGJsb2NrX251bWJlchgDIAEoBCJeChVHZXRDb21taXRtZW50c1JlcXVlc3QSEAoIY2hhaW5faWQYASABKAQSGAoQY29udHJhY3RfYWRkcmVzcxgCIAEoDBIZChFjb21taXRtZW50X2hhc2hlcxgDIAMoDCJ2ChZHZXRDb21taXRtZW50c1Jlc3BvbnNlEhAKCGNoYWluX2lkGAEgASgEEhgKEGNvbnRyYWN0X2FkZHJlc3MYAiABKAwSMAoLY29tbWl0bWVudHMYAyADKAsyGy5teXN0aWtvLmRhdGEudjEuQ29tbWl0bWVudCJCCh1HZXRDb21taXRtZW50c0J5VHhIYXNoUmVxdWVzdBIQCghjaGFpbl9pZBgBIAEoBBIPCgd0eF9oYXNoGAMgASgMIn4KHkdldENvbW1pdG1lbnRzQnlUeEhhc2hSZXNwb25zZRIQCghjaGFpbl9pZBgBIAEoBBIYChBjb250cmFjdF9hZGRyZXNzGAIgASgMEjAKC2NvbW1pdG1lbnRzGAMgAygLMhsubXlzdGlrby5kYXRhLnYxLkNvbW1pdG1lbnQi6wEKGkdldENvbW1pdG1lbnRIYXNoZXNSZXF1ZXN0EhAKCGNoYWluX2lkGAEgASgEEhgKEGNvbnRyYWN0X2FkZHJlc3MYAiABKAwSHAoPZnJvbV9sZWFmX2luZGV4GAMgASgESACIAQESGgoNdG9fbGVhZl9pbmRleBgEIAEoBEgBiAEBEjYKBnN0YXR1cxgFIAEoDjIhLm15c3Rpa28uZGF0YS52MS5Db21taXRtZW50U3RhdHVzSAKIAQFCEgoQX2Zyb21fbGVhZl9pbmRleEIQCg5fdG9fbGVhZl9pbmRleEIJCgdfc3RhdHVzIpQBChtHZXRDb21taXRtZW50SGFzaGVzUmVzcG9uc2USEAoIY2hhaW5faWQYASABKAQSGAoQY29udHJhY3RfYWRkcmVzcxgCIAEoDBIXCg9mcm9tX2xlYWZfaW5kZXgYAyABKAQSFQoNdG9fbGVhZl9pbmRleBgEIAEoBBIZChFjb21taXRtZW50X2hhc2hlcxgFIAMoDCJcChRHZXROdWxsaWZpZXJzUmVxdWVzdBIQCghjaGFpbl9pZBgBIAEoBBIYChBjb250cmFjdF9hZGRyZXNzGAIgASgMEhgKEG51bGxpZmllcl9oYXNoZXMYAyADKAwiQQocR2V0TnVsbGlmaWVyc0J5VHhIYXNoUmVxdWVzdBIQCghjaGFpbl9pZBgBIAEoBBIPCgd0eF9oYXNoGAMgASgMInMKFUdldE51bGxpZmllcnNSZXNwb25zZRIQCghjaGFpbl9pZBgBIAEoBBIYChBjb250cmFjdF9hZGRyZXNzGAIgASgMEi4KCm51bGxpZmllcnMYAyADKAsyGi5teXN0aWtvLmRhdGEudjEuTnVsbGlmaWVyInsKHUdldE51bGxpZmllcnNCeVR4SGFzaFJlc3BvbnNlEhAKCGNoYWluX2lkGAEgASgEEhgKEGNvbnRyYWN0X2FkZHJlc3MYAiABKAwSLgoKbnVsbGlmaWVycxgDIAMoCzIaLm15c3Rpa28uZGF0YS52MS5OdWxsaWZpZXIiFAoSSGVhbHRoQ2hlY2tSZXF1ZXN0IhUKE0hlYWx0aENoZWNrUmVzcG9uc2UyoggKEFNlcXVlbmNlclNlcnZpY2USXwoKRmV0Y2hDaGFpbhInLm15c3Rpa28uc2VxdWVuY2VyLnYxLkZldGNoQ2hhaW5SZXF1ZXN0GigubXlzdGlrby5zZXF1ZW5jZXIudjEuRmV0Y2hDaGFpblJlc3BvbnNlEnEKEENoYWluTG9hZGVkQmxvY2sSLS5teXN0aWtvLnNlcXVlbmNlci52MS5DaGFpbkxvYWRlZEJsb2NrUmVxdWVzdBouLm15c3Rpa28uc2VxdWVuY2VyLnYxLkNoYWluTG9hZGVkQmxvY2tSZXNwb25zZRJ6ChNDb250cmFjdExvYWRlZEJsb2NrEjAubXlzdGlrby5zZXF1ZW5jZXIudjEuQ29udHJhY3RMb2FkZWRCbG9ja1JlcXVlc3QaMS5teXN0aWtvLnNlcXVlbmNlci52MS5Db250cmFjdExvYWRlZEJsb2NrUmVzcG9uc2USawoOR2V0Q29tbWl0bWVudHMSKy5teXN0aWtvLnNlcXVlbmNlci52MS5HZXRDb21taXRtZW50c1JlcXVlc3QaLC5teXN0aWtvLnNlcXVlbmNlci52MS5HZXRDb21taXRtZW50c1Jlc3BvbnNlEoMBChZHZXRDb21taXRtZW50c0J5VHhIYXNoEjMubXlzdGlrby5zZXF1ZW5jZXIudjEuR2V0Q29tbWl0bWVudHNCeVR4SGFzaFJlcXVlc3QaNC5teXN0aWtvLnNlcXVlbmNlci52MS5HZXRDb21taXRtZW50c0J5VHhIYXNoUmVzcG9uc2USegoTR2V0Q29tbWl0bWVudEhhc2hlcxIwLm15c3Rpa28uc2VxdWVuY2VyLnYxLkdldENvbW1pdG1lbnRIYXNoZXNSZXF1ZXN0GjEubXlzdGlrby5zZXF1ZW5jZXIudjEuR2V0Q29tbWl0bWVudEhhc2hlc1Jlc3BvbnNlEmgKDUdldE51bGxpZmllcnMSKi5teXN0aWtvLnNlcXVlbmNlci52MS5HZXROdWxsaWZpZXJzUmVxdWVzdBorLm15c3Rpa28uc2VxdWVuY2VyLnYxLkdldE51bGxpZmllcnNSZXNwb25zZRKAAQoVR2V0TnVsbGlmaWVyc0J5VHhIYXNoEjIubXlzdGlrby5zZXF1ZW5jZXIudjEuR2V0TnVsbGlmaWVyc0J5VHhIYXNoUmVxdWVzdBozLm15c3Rpa28uc2VxdWVuY2VyLnYxLkdldE51bGxpZmllcnNCeVR4SGFzaFJlc3BvbnNlEmIKC0hlYWx0aENoZWNrEigubXlzdGlrby5zZXF1ZW5jZXIudjEuSGVhbHRoQ2hlY2tSZXF1ZXN0GikubXlzdGlrby5zZXF1ZW5jZXIudjEuSGVhbHRoQ2hlY2tSZXNwb25zZUKeAQocbmV0d29yay5teXN0aWtvLnNlcXVlbmNlci52MUIMU2VydmljZVByb3RvUAGiAgNNU1iqAhRNeXN0aWtvLlNlcXVlbmNlci5WMcoCFE15c3Rpa29cU2VxdWVuY2VyXFYx4gIgTXlzdGlrb1xTZXF1ZW5jZXJcVjFcR1BCTWV0YWRhdGHqAhZNeXN0aWtvOjpTZXF1ZW5jZXI6OlYxYgZwcm90bzM',
    [file_mystiko_data_v1_commitment, file_mystiko_data_v1_nullifier],
  );

/**
 * @generated from message mystiko.sequencer.v1.FetchContractRequest
 */
export type FetchContractRequest = Message<'mystiko.sequencer.v1.FetchContractRequest'> & {
  /**
   * @generated from field: bytes contract_address = 1;
   */
  contractAddress: Uint8Array;

  /**
   * @generated from field: optional uint64 start_block = 2;
   */
  startBlock?: bigint;

  /**
   * @generated from field: optional uint64 target_block = 3;
   */
  targetBlock?: bigint;
};

/**
 * Describes the message mystiko.sequencer.v1.FetchContractRequest.
 * Use `create(FetchContractRequestSchema)` to create a new message.
 */
export const FetchContractRequestSchema: GenMessage<FetchContractRequest> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 0);

/**
 * @generated from message mystiko.sequencer.v1.FetchContractResponse
 */
export type FetchContractResponse = Message<'mystiko.sequencer.v1.FetchContractResponse'> & {
  /**
   * @generated from field: bytes contract_address = 1;
   */
  contractAddress: Uint8Array;

  /**
   * @generated from field: uint64 start_block = 2;
   */
  startBlock: bigint;

  /**
   * @generated from field: uint64 end_block = 3;
   */
  endBlock: bigint;

  /**
   * @generated from field: repeated mystiko.data.v1.Commitment commitments = 5;
   */
  commitments: Commitment[];

  /**
   * @generated from field: repeated mystiko.data.v1.Nullifier nullifiers = 6;
   */
  nullifiers: Nullifier[];
};

/**
 * Describes the message mystiko.sequencer.v1.FetchContractResponse.
 * Use `create(FetchContractResponseSchema)` to create a new message.
 */
export const FetchContractResponseSchema: GenMessage<FetchContractResponse> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 1);

/**
 * @generated from message mystiko.sequencer.v1.FetchChainRequest
 */
export type FetchChainRequest = Message<'mystiko.sequencer.v1.FetchChainRequest'> & {
  /**
   * @generated from field: uint64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: uint64 start_block = 2;
   */
  startBlock: bigint;

  /**
   * @generated from field: uint64 target_block = 3;
   */
  targetBlock: bigint;

  /**
   * @generated from field: optional bool is_full = 4;
   */
  isFull?: boolean;

  /**
   * @generated from field: repeated mystiko.sequencer.v1.FetchContractRequest contracts = 5;
   */
  contracts: FetchContractRequest[];
};

/**
 * Describes the message mystiko.sequencer.v1.FetchChainRequest.
 * Use `create(FetchChainRequestSchema)` to create a new message.
 */
export const FetchChainRequestSchema: GenMessage<FetchChainRequest> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 2);

/**
 * @generated from message mystiko.sequencer.v1.FetchChainResponse
 */
export type FetchChainResponse = Message<'mystiko.sequencer.v1.FetchChainResponse'> & {
  /**
   * @generated from field: uint64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: repeated mystiko.sequencer.v1.FetchContractResponse contracts = 3;
   */
  contracts: FetchContractResponse[];
};

/**
 * Describes the message mystiko.sequencer.v1.FetchChainResponse.
 * Use `create(FetchChainResponseSchema)` to create a new message.
 */
export const FetchChainResponseSchema: GenMessage<FetchChainResponse> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 3);

/**
 * @generated from message mystiko.sequencer.v1.ChainLoadedBlockRequest
 */
export type ChainLoadedBlockRequest = Message<'mystiko.sequencer.v1.ChainLoadedBlockRequest'> & {
  /**
   * @generated from field: uint64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: optional bool with_contracts = 2;
   */
  withContracts?: boolean;
};

/**
 * Describes the message mystiko.sequencer.v1.ChainLoadedBlockRequest.
 * Use `create(ChainLoadedBlockRequestSchema)` to create a new message.
 */
export const ChainLoadedBlockRequestSchema: GenMessage<ChainLoadedBlockRequest> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 4);

/**
 * @generated from message mystiko.sequencer.v1.ChainLoadedBlockResponse
 */
export type ChainLoadedBlockResponse = Message<'mystiko.sequencer.v1.ChainLoadedBlockResponse'> & {
  /**
   * @generated from field: uint64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: uint64 block_number = 2;
   */
  blockNumber: bigint;

  /**
   * @generated from field: repeated mystiko.sequencer.v1.ContractLoadedBlockResponse contracts = 3;
   */
  contracts: ContractLoadedBlockResponse[];
};

/**
 * Describes the message mystiko.sequencer.v1.ChainLoadedBlockResponse.
 * Use `create(ChainLoadedBlockResponseSchema)` to create a new message.
 */
export const ChainLoadedBlockResponseSchema: GenMessage<ChainLoadedBlockResponse> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 5);

/**
 * @generated from message mystiko.sequencer.v1.ContractLoadedBlockRequest
 */
export type ContractLoadedBlockRequest = Message<'mystiko.sequencer.v1.ContractLoadedBlockRequest'> & {
  /**
   * @generated from field: uint64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: bytes contract_address = 2;
   */
  contractAddress: Uint8Array;
};

/**
 * Describes the message mystiko.sequencer.v1.ContractLoadedBlockRequest.
 * Use `create(ContractLoadedBlockRequestSchema)` to create a new message.
 */
export const ContractLoadedBlockRequestSchema: GenMessage<ContractLoadedBlockRequest> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 6);

/**
 * @generated from message mystiko.sequencer.v1.ContractLoadedBlockResponse
 */
export type ContractLoadedBlockResponse = Message<'mystiko.sequencer.v1.ContractLoadedBlockResponse'> & {
  /**
   * @generated from field: uint64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: bytes contract_address = 2;
   */
  contractAddress: Uint8Array;

  /**
   * @generated from field: uint64 block_number = 3;
   */
  blockNumber: bigint;
};

/**
 * Describes the message mystiko.sequencer.v1.ContractLoadedBlockResponse.
 * Use `create(ContractLoadedBlockResponseSchema)` to create a new message.
 */
export const ContractLoadedBlockResponseSchema: GenMessage<ContractLoadedBlockResponse> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 7);

/**
 * @generated from message mystiko.sequencer.v1.GetCommitmentsRequest
 */
export type GetCommitmentsRequest = Message<'mystiko.sequencer.v1.GetCommitmentsRequest'> & {
  /**
   * @generated from field: uint64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: bytes contract_address = 2;
   */
  contractAddress: Uint8Array;

  /**
   * @generated from field: repeated bytes commitment_hashes = 3;
   */
  commitmentHashes: Uint8Array[];
};

/**
 * Describes the message mystiko.sequencer.v1.GetCommitmentsRequest.
 * Use `create(GetCommitmentsRequestSchema)` to create a new message.
 */
export const GetCommitmentsRequestSchema: GenMessage<GetCommitmentsRequest> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 8);

/**
 * @generated from message mystiko.sequencer.v1.GetCommitmentsResponse
 */
export type GetCommitmentsResponse = Message<'mystiko.sequencer.v1.GetCommitmentsResponse'> & {
  /**
   * @generated from field: uint64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: bytes contract_address = 2;
   */
  contractAddress: Uint8Array;

  /**
   * @generated from field: repeated mystiko.data.v1.Commitment commitments = 3;
   */
  commitments: Commitment[];
};

/**
 * Describes the message mystiko.sequencer.v1.GetCommitmentsResponse.
 * Use `create(GetCommitmentsResponseSchema)` to create a new message.
 */
export const GetCommitmentsResponseSchema: GenMessage<GetCommitmentsResponse> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 9);

/**
 * @generated from message mystiko.sequencer.v1.GetCommitmentsByTxHashRequest
 */
export type GetCommitmentsByTxHashRequest = Message<'mystiko.sequencer.v1.GetCommitmentsByTxHashRequest'> & {
  /**
   * @generated from field: uint64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: bytes tx_hash = 3;
   */
  txHash: Uint8Array;
};

/**
 * Describes the message mystiko.sequencer.v1.GetCommitmentsByTxHashRequest.
 * Use `create(GetCommitmentsByTxHashRequestSchema)` to create a new message.
 */
export const GetCommitmentsByTxHashRequestSchema: GenMessage<GetCommitmentsByTxHashRequest> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 10);

/**
 * @generated from message mystiko.sequencer.v1.GetCommitmentsByTxHashResponse
 */
export type GetCommitmentsByTxHashResponse =
  Message<'mystiko.sequencer.v1.GetCommitmentsByTxHashResponse'> & {
    /**
     * @generated from field: uint64 chain_id = 1;
     */
    chainId: bigint;

    /**
     * @generated from field: bytes contract_address = 2;
     */
    contractAddress: Uint8Array;

    /**
     * @generated from field: repeated mystiko.data.v1.Commitment commitments = 3;
     */
    commitments: Commitment[];
  };

/**
 * Describes the message mystiko.sequencer.v1.GetCommitmentsByTxHashResponse.
 * Use `create(GetCommitmentsByTxHashResponseSchema)` to create a new message.
 */
export const GetCommitmentsByTxHashResponseSchema: GenMessage<GetCommitmentsByTxHashResponse> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 11);

/**
 * @generated from message mystiko.sequencer.v1.GetCommitmentHashesRequest
 */
export type GetCommitmentHashesRequest = Message<'mystiko.sequencer.v1.GetCommitmentHashesRequest'> & {
  /**
   * @generated from field: uint64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: bytes contract_address = 2;
   */
  contractAddress: Uint8Array;

  /**
   * @generated from field: optional uint64 from_leaf_index = 3;
   */
  fromLeafIndex?: bigint;

  /**
   * @generated from field: optional uint64 to_leaf_index = 4;
   */
  toLeafIndex?: bigint;

  /**
   * @generated from field: optional mystiko.data.v1.CommitmentStatus status = 5;
   */
  status?: CommitmentStatus;
};

/**
 * Describes the message mystiko.sequencer.v1.GetCommitmentHashesRequest.
 * Use `create(GetCommitmentHashesRequestSchema)` to create a new message.
 */
export const GetCommitmentHashesRequestSchema: GenMessage<GetCommitmentHashesRequest> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 12);

/**
 * @generated from message mystiko.sequencer.v1.GetCommitmentHashesResponse
 */
export type GetCommitmentHashesResponse = Message<'mystiko.sequencer.v1.GetCommitmentHashesResponse'> & {
  /**
   * @generated from field: uint64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: bytes contract_address = 2;
   */
  contractAddress: Uint8Array;

  /**
   * @generated from field: uint64 from_leaf_index = 3;
   */
  fromLeafIndex: bigint;

  /**
   * @generated from field: uint64 to_leaf_index = 4;
   */
  toLeafIndex: bigint;

  /**
   * @generated from field: repeated bytes commitment_hashes = 5;
   */
  commitmentHashes: Uint8Array[];
};

/**
 * Describes the message mystiko.sequencer.v1.GetCommitmentHashesResponse.
 * Use `create(GetCommitmentHashesResponseSchema)` to create a new message.
 */
export const GetCommitmentHashesResponseSchema: GenMessage<GetCommitmentHashesResponse> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 13);

/**
 * @generated from message mystiko.sequencer.v1.GetNullifiersRequest
 */
export type GetNullifiersRequest = Message<'mystiko.sequencer.v1.GetNullifiersRequest'> & {
  /**
   * @generated from field: uint64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: bytes contract_address = 2;
   */
  contractAddress: Uint8Array;

  /**
   * @generated from field: repeated bytes nullifier_hashes = 3;
   */
  nullifierHashes: Uint8Array[];
};

/**
 * Describes the message mystiko.sequencer.v1.GetNullifiersRequest.
 * Use `create(GetNullifiersRequestSchema)` to create a new message.
 */
export const GetNullifiersRequestSchema: GenMessage<GetNullifiersRequest> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 14);

/**
 * @generated from message mystiko.sequencer.v1.GetNullifiersByTxHashRequest
 */
export type GetNullifiersByTxHashRequest = Message<'mystiko.sequencer.v1.GetNullifiersByTxHashRequest'> & {
  /**
   * @generated from field: uint64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: bytes tx_hash = 3;
   */
  txHash: Uint8Array;
};

/**
 * Describes the message mystiko.sequencer.v1.GetNullifiersByTxHashRequest.
 * Use `create(GetNullifiersByTxHashRequestSchema)` to create a new message.
 */
export const GetNullifiersByTxHashRequestSchema: GenMessage<GetNullifiersByTxHashRequest> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 15);

/**
 * @generated from message mystiko.sequencer.v1.GetNullifiersResponse
 */
export type GetNullifiersResponse = Message<'mystiko.sequencer.v1.GetNullifiersResponse'> & {
  /**
   * @generated from field: uint64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: bytes contract_address = 2;
   */
  contractAddress: Uint8Array;

  /**
   * @generated from field: repeated mystiko.data.v1.Nullifier nullifiers = 3;
   */
  nullifiers: Nullifier[];
};

/**
 * Describes the message mystiko.sequencer.v1.GetNullifiersResponse.
 * Use `create(GetNullifiersResponseSchema)` to create a new message.
 */
export const GetNullifiersResponseSchema: GenMessage<GetNullifiersResponse> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 16);

/**
 * @generated from message mystiko.sequencer.v1.GetNullifiersByTxHashResponse
 */
export type GetNullifiersByTxHashResponse = Message<'mystiko.sequencer.v1.GetNullifiersByTxHashResponse'> & {
  /**
   * @generated from field: uint64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * @generated from field: bytes contract_address = 2;
   */
  contractAddress: Uint8Array;

  /**
   * @generated from field: repeated mystiko.data.v1.Nullifier nullifiers = 3;
   */
  nullifiers: Nullifier[];
};

/**
 * Describes the message mystiko.sequencer.v1.GetNullifiersByTxHashResponse.
 * Use `create(GetNullifiersByTxHashResponseSchema)` to create a new message.
 */
export const GetNullifiersByTxHashResponseSchema: GenMessage<GetNullifiersByTxHashResponse> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 17);

/**
 * @generated from message mystiko.sequencer.v1.HealthCheckRequest
 */
export type HealthCheckRequest = Message<'mystiko.sequencer.v1.HealthCheckRequest'> & {};

/**
 * Describes the message mystiko.sequencer.v1.HealthCheckRequest.
 * Use `create(HealthCheckRequestSchema)` to create a new message.
 */
export const HealthCheckRequestSchema: GenMessage<HealthCheckRequest> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 18);

/**
 * @generated from message mystiko.sequencer.v1.HealthCheckResponse
 */
export type HealthCheckResponse = Message<'mystiko.sequencer.v1.HealthCheckResponse'> & {};

/**
 * Describes the message mystiko.sequencer.v1.HealthCheckResponse.
 * Use `create(HealthCheckResponseSchema)` to create a new message.
 */
export const HealthCheckResponseSchema: GenMessage<HealthCheckResponse> =
  /*@__PURE__*/
  messageDesc(file_mystiko_sequencer_v1_service, 19);

/**
 * @generated from service mystiko.sequencer.v1.SequencerService
 */
export const SequencerService: GenService<{
  /**
   * @generated from rpc mystiko.sequencer.v1.SequencerService.FetchChain
   */
  fetchChain: {
    methodKind: 'unary';
    input: typeof FetchChainRequestSchema;
    output: typeof FetchChainResponseSchema;
  };
  /**
   * @generated from rpc mystiko.sequencer.v1.SequencerService.ChainLoadedBlock
   */
  chainLoadedBlock: {
    methodKind: 'unary';
    input: typeof ChainLoadedBlockRequestSchema;
    output: typeof ChainLoadedBlockResponseSchema;
  };
  /**
   * @generated from rpc mystiko.sequencer.v1.SequencerService.ContractLoadedBlock
   */
  contractLoadedBlock: {
    methodKind: 'unary';
    input: typeof ContractLoadedBlockRequestSchema;
    output: typeof ContractLoadedBlockResponseSchema;
  };
  /**
   * @generated from rpc mystiko.sequencer.v1.SequencerService.GetCommitments
   */
  getCommitments: {
    methodKind: 'unary';
    input: typeof GetCommitmentsRequestSchema;
    output: typeof GetCommitmentsResponseSchema;
  };
  /**
   * @generated from rpc mystiko.sequencer.v1.SequencerService.GetCommitmentsByTxHash
   */
  getCommitmentsByTxHash: {
    methodKind: 'unary';
    input: typeof GetCommitmentsByTxHashRequestSchema;
    output: typeof GetCommitmentsByTxHashResponseSchema;
  };
  /**
   * @generated from rpc mystiko.sequencer.v1.SequencerService.GetCommitmentHashes
   */
  getCommitmentHashes: {
    methodKind: 'unary';
    input: typeof GetCommitmentHashesRequestSchema;
    output: typeof GetCommitmentHashesResponseSchema;
  };
  /**
   * @generated from rpc mystiko.sequencer.v1.SequencerService.GetNullifiers
   */
  getNullifiers: {
    methodKind: 'unary';
    input: typeof GetNullifiersRequestSchema;
    output: typeof GetNullifiersResponseSchema;
  };
  /**
   * @generated from rpc mystiko.sequencer.v1.SequencerService.GetNullifiersByTxHash
   */
  getNullifiersByTxHash: {
    methodKind: 'unary';
    input: typeof GetNullifiersByTxHashRequestSchema;
    output: typeof GetNullifiersByTxHashResponseSchema;
  };
  /**
   * @generated from rpc mystiko.sequencer.v1.SequencerService.HealthCheck
   */
  healthCheck: {
    methodKind: 'unary';
    input: typeof HealthCheckRequestSchema;
    output: typeof HealthCheckResponseSchema;
  };
}> = /*@__PURE__*/ serviceDesc(file_mystiko_sequencer_v1_service, 0);
