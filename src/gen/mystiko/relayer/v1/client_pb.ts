// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file mystiko/relayer/v1/client.proto (package mystiko.relayer.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3 } from '@bufbuild/protobuf';

/**
 * @generated from message mystiko.relayer.v1.RelayerClientOptions
 */
export class RelayerClientOptions extends Message<RelayerClientOptions> {
  /**
   * @generated from field: optional bool is_testnet = 1;
   */
  isTestnet?: boolean;

  /**
   * @generated from field: optional bool is_staging = 2;
   */
  isStaging?: boolean;

  /**
   * @generated from field: optional uint64 timeout_ms = 3;
   */
  timeoutMs?: bigint;

  /**
   * @generated from field: optional string relayer_config_file_path = 4;
   */
  relayerConfigFilePath?: string;

  /**
   * @generated from field: optional string relayer_config_remote_base_url = 5;
   */
  relayerConfigRemoteBaseUrl?: string;

  /**
   * @generated from field: optional string relayer_config_git_revision = 6;
   */
  relayerConfigGitRevision?: string;

  constructor(data?: PartialMessage<RelayerClientOptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'mystiko.relayer.v1.RelayerClientOptions';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'is_testnet', kind: 'scalar', T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: 'is_staging', kind: 'scalar', T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 3, name: 'timeout_ms', kind: 'scalar', T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 4, name: 'relayer_config_file_path', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
    {
      no: 5,
      name: 'relayer_config_remote_base_url',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
      opt: true,
    },
    { no: 6, name: 'relayer_config_git_revision', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelayerClientOptions {
    return new RelayerClientOptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelayerClientOptions {
    return new RelayerClientOptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelayerClientOptions {
    return new RelayerClientOptions().fromJsonString(jsonString, options);
  }

  static equals(
    a: RelayerClientOptions | PlainMessage<RelayerClientOptions> | undefined,
    b: RelayerClientOptions | PlainMessage<RelayerClientOptions> | undefined,
  ): boolean {
    return proto3.util.equals(RelayerClientOptions, a, b);
  }
}
