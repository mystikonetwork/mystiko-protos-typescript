// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file mystiko/core/handler/v1/account.proto (package mystiko.core.handler.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3 } from '@bufbuild/protobuf';

/**
 * @generated from message mystiko.core.handler.v1.CreateAccountOptions
 */
export class CreateAccountOptions extends Message<CreateAccountOptions> {
  /**
   * @generated from field: string wallet_password = 1;
   */
  walletPassword = '';

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: optional string secret_key = 3;
   */
  secretKey?: string;

  constructor(data?: PartialMessage<CreateAccountOptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'mystiko.core.handler.v1.CreateAccountOptions';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'wallet_password', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'name', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: 'secret_key', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAccountOptions {
    return new CreateAccountOptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAccountOptions {
    return new CreateAccountOptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAccountOptions {
    return new CreateAccountOptions().fromJsonString(jsonString, options);
  }

  static equals(
    a: CreateAccountOptions | PlainMessage<CreateAccountOptions> | undefined,
    b: CreateAccountOptions | PlainMessage<CreateAccountOptions> | undefined,
  ): boolean {
    return proto3.util.equals(CreateAccountOptions, a, b);
  }
}

/**
 * @generated from message mystiko.core.handler.v1.UpdateAccountOptions
 */
export class UpdateAccountOptions extends Message<UpdateAccountOptions> {
  /**
   * @generated from field: string wallet_password = 1;
   */
  walletPassword = '';

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  constructor(data?: PartialMessage<UpdateAccountOptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'mystiko.core.handler.v1.UpdateAccountOptions';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'wallet_password', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'name', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAccountOptions {
    return new UpdateAccountOptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAccountOptions {
    return new UpdateAccountOptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAccountOptions {
    return new UpdateAccountOptions().fromJsonString(jsonString, options);
  }

  static equals(
    a: UpdateAccountOptions | PlainMessage<UpdateAccountOptions> | undefined,
    b: UpdateAccountOptions | PlainMessage<UpdateAccountOptions> | undefined,
  ): boolean {
    return proto3.util.equals(UpdateAccountOptions, a, b);
  }
}
