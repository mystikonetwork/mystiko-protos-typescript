// @generated by protoc-gen-es v1.4.2 with parameter "target=ts"
// @generated from file mystiko/core/handler/v1/wallet.proto (package mystiko.core.handler.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3 } from '@bufbuild/protobuf';

/**
 * @generated from message mystiko.core.handler.v1.CreateWalletOptions
 */
export class CreateWalletOptions extends Message<CreateWalletOptions> {
  /**
   * @generated from field: string password = 1;
   */
  password = '';

  /**
   * @generated from field: optional string mnemonic_phrase = 2;
   */
  mnemonicPhrase?: string;

  constructor(data?: PartialMessage<CreateWalletOptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'mystiko.core.handler.v1.CreateWalletOptions';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'password', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'mnemonic_phrase', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateWalletOptions {
    return new CreateWalletOptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateWalletOptions {
    return new CreateWalletOptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateWalletOptions {
    return new CreateWalletOptions().fromJsonString(jsonString, options);
  }

  static equals(
    a: CreateWalletOptions | PlainMessage<CreateWalletOptions> | undefined,
    b: CreateWalletOptions | PlainMessage<CreateWalletOptions> | undefined,
  ): boolean {
    return proto3.util.equals(CreateWalletOptions, a, b);
  }
}
