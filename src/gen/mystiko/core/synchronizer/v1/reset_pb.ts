// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file mystiko/core/synchronizer/v1/reset.proto (package mystiko.core.synchronizer.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3, protoInt64 } from '@bufbuild/protobuf';

/**
 * @generated from message mystiko.core.synchronizer.v1.ResetChainOptions
 */
export class ResetChainOptions extends Message<ResetChainOptions> {
  /**
   * @generated from field: uint64 chain_id = 1;
   */
  chainId = protoInt64.zero;

  /**
   * @generated from field: repeated string contract_addresses = 2;
   */
  contractAddresses: string[] = [];

  /**
   * @generated from field: optional uint64 block_number = 3;
   */
  blockNumber?: bigint;

  constructor(data?: PartialMessage<ResetChainOptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'mystiko.core.synchronizer.v1.ResetChainOptions';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'chain_id', kind: 'scalar', T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: 'contract_addresses', kind: 'scalar', T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: 'block_number', kind: 'scalar', T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetChainOptions {
    return new ResetChainOptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetChainOptions {
    return new ResetChainOptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetChainOptions {
    return new ResetChainOptions().fromJsonString(jsonString, options);
  }

  static equals(
    a: ResetChainOptions | PlainMessage<ResetChainOptions> | undefined,
    b: ResetChainOptions | PlainMessage<ResetChainOptions> | undefined,
  ): boolean {
    return proto3.util.equals(ResetChainOptions, a, b);
  }
}

/**
 * @generated from message mystiko.core.synchronizer.v1.SynchronizerResetOptions
 */
export class SynchronizerResetOptions extends Message<SynchronizerResetOptions> {
  /**
   * @generated from field: repeated mystiko.core.synchronizer.v1.ResetChainOptions chains = 1;
   */
  chains: ResetChainOptions[] = [];

  constructor(data?: PartialMessage<SynchronizerResetOptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'mystiko.core.synchronizer.v1.SynchronizerResetOptions';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'chains', kind: 'message', T: ResetChainOptions, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SynchronizerResetOptions {
    return new SynchronizerResetOptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SynchronizerResetOptions {
    return new SynchronizerResetOptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SynchronizerResetOptions {
    return new SynchronizerResetOptions().fromJsonString(jsonString, options);
  }

  static equals(
    a: SynchronizerResetOptions | PlainMessage<SynchronizerResetOptions> | undefined,
    b: SynchronizerResetOptions | PlainMessage<SynchronizerResetOptions> | undefined,
  ): boolean {
    return proto3.util.equals(SynchronizerResetOptions, a, b);
  }
}
