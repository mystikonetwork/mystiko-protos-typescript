// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file mystiko/core/scanner/v1/sync.proto (package mystiko.core.scanner.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3 } from '@bufbuild/protobuf';

/**
 * @generated from message mystiko.core.scanner.v1.ScannerSyncOptions
 */
export class ScannerSyncOptions extends Message<ScannerSyncOptions> {
  /**
   * @generated from field: string wallet_password = 1;
   */
  walletPassword = '';

  /**
   * @generated from field: optional uint32 concurrency = 2;
   */
  concurrency?: number;

  constructor(data?: PartialMessage<ScannerSyncOptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'mystiko.core.scanner.v1.ScannerSyncOptions';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'wallet_password', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'concurrency', kind: 'scalar', T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScannerSyncOptions {
    return new ScannerSyncOptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScannerSyncOptions {
    return new ScannerSyncOptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScannerSyncOptions {
    return new ScannerSyncOptions().fromJsonString(jsonString, options);
  }

  static equals(
    a: ScannerSyncOptions | PlainMessage<ScannerSyncOptions> | undefined,
    b: ScannerSyncOptions | PlainMessage<ScannerSyncOptions> | undefined,
  ): boolean {
    return proto3.util.equals(ScannerSyncOptions, a, b);
  }
}
