// @generated by protoc-gen-es v1.4.2 with parameter "target=ts"
// @generated from file mystiko/core/document/v1/deposit.proto (package mystiko.core.document.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3, protoInt64 } from '@bufbuild/protobuf';
import { BridgeType } from '../../../common/v1/types_pb.js';
import { DepositStatus } from '../../v1/common_pb.js';

/**
 * @generated from message mystiko.core.document.v1.Deposit
 */
export class Deposit extends Message<Deposit> {
  /**
   * @generated from field: string id = 1;
   */
  id = '';

  /**
   * @generated from field: uint64 created_at = 2;
   */
  createdAt = protoInt64.zero;

  /**
   * @generated from field: uint64 updated_at = 3;
   */
  updatedAt = protoInt64.zero;

  /**
   * @generated from field: uint64 chain_id = 4;
   */
  chainId = protoInt64.zero;

  /**
   * @generated from field: string contract_address = 5;
   */
  contractAddress = '';

  /**
   * @generated from field: string pool_address = 6;
   */
  poolAddress = '';

  /**
   * @generated from field: uint64 dst_chain_id = 7;
   */
  dstChainId = protoInt64.zero;

  /**
   * @generated from field: string dst_chain_contract_address = 8;
   */
  dstChainContractAddress = '';

  /**
   * @generated from field: string dst_pool_address = 9;
   */
  dstPoolAddress = '';

  /**
   * @generated from field: string commitment_hash = 10;
   */
  commitmentHash = '';

  /**
   * @generated from field: string hash_k = 11;
   */
  hashK = '';

  /**
   * @generated from field: string random_s = 12;
   */
  randomS = '';

  /**
   * @generated from field: string encrypted_note = 13;
   */
  encryptedNote = '';

  /**
   * @generated from field: string asset_symbol = 14;
   */
  assetSymbol = '';

  /**
   * @generated from field: uint32 asset_decimals = 15;
   */
  assetDecimals = 0;

  /**
   * @generated from field: double amount = 16;
   */
  amount = 0;

  /**
   * @generated from field: string decimal_amount = 17;
   */
  decimalAmount = '';

  /**
   * @generated from field: double rollup_fee_amount = 18;
   */
  rollupFeeAmount = 0;

  /**
   * @generated from field: string rollup_fee_decimal_amount = 19;
   */
  rollupFeeDecimalAmount = '';

  /**
   * @generated from field: string shielded_address = 20;
   */
  shieldedAddress = '';

  /**
   * @generated from field: string wallet_id = 21;
   */
  walletId = '';

  /**
   * @generated from field: optional string asset_address = 22;
   */
  assetAddress?: string;

  /**
   * @generated from field: optional double bridge_fee_amount = 23;
   */
  bridgeFeeAmount?: number;

  /**
   * @generated from field: optional string bridge_fee_decimal_amount = 24;
   */
  bridgeFeeDecimalAmount?: string;

  /**
   * @generated from field: optional double executor_fee_amount = 25;
   */
  executorFeeAmount?: number;

  /**
   * @generated from field: optional string executor_fee_decimal_amount = 26;
   */
  executorFeeDecimalAmount?: string;

  /**
   * @generated from field: optional string bridge_fee_asset_address = 27;
   */
  bridgeFeeAssetAddress?: string;

  /**
   * @generated from field: optional string bridge_fee_asset_symbol = 28;
   */
  bridgeFeeAssetSymbol?: string;

  /**
   * @generated from field: optional uint32 bridge_fee_asset_decimals = 29;
   */
  bridgeFeeAssetDecimals?: number;

  /**
   * @generated from field: optional string executor_fee_asset_address = 30;
   */
  executorFeeAssetAddress?: string;

  /**
   * @generated from field: optional string executor_fee_asset_symbol = 31;
   */
  executorFeeAssetSymbol?: string;

  /**
   * @generated from field: optional uint32 executor_fee_asset_decimals = 32;
   */
  executorFeeAssetDecimals?: number;

  /**
   * @generated from field: optional string queued_transaction_hash = 33;
   */
  queuedTransactionHash?: string;

  /**
   * @generated from field: optional string included_transaction_hash = 34;
   */
  includedTransactionHash?: string;

  /**
   * @generated from field: optional string src_chain_transaction_hash = 35;
   */
  srcChainTransactionHash?: string;

  /**
   * @generated from field: repeated string asset_approve_transaction_hash = 36;
   */
  assetApproveTransactionHash: string[] = [];

  /**
   * @generated from field: optional string error_message = 37;
   */
  errorMessage?: string;

  /**
   * @generated from field: mystiko.common.v1.BridgeType bridge_type = 38;
   */
  bridgeType = BridgeType.UNSPECIFIED;

  /**
   * @generated from field: mystiko.core.v1.DepositStatus status = 39;
   */
  status = DepositStatus.UNSPECIFIED;

  constructor(data?: PartialMessage<Deposit>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'mystiko.core.document.v1.Deposit';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'created_at', kind: 'scalar', T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: 'updated_at', kind: 'scalar', T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: 'chain_id', kind: 'scalar', T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: 'contract_address', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 6, name: 'pool_address', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 7, name: 'dst_chain_id', kind: 'scalar', T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: 'dst_chain_contract_address', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 9, name: 'dst_pool_address', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 10, name: 'commitment_hash', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 11, name: 'hash_k', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 12, name: 'random_s', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 13, name: 'encrypted_note', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 14, name: 'asset_symbol', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 15, name: 'asset_decimals', kind: 'scalar', T: 13 /* ScalarType.UINT32 */ },
    { no: 16, name: 'amount', kind: 'scalar', T: 1 /* ScalarType.DOUBLE */ },
    { no: 17, name: 'decimal_amount', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 18, name: 'rollup_fee_amount', kind: 'scalar', T: 1 /* ScalarType.DOUBLE */ },
    { no: 19, name: 'rollup_fee_decimal_amount', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 20, name: 'shielded_address', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 21, name: 'wallet_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 22, name: 'asset_address', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
    { no: 23, name: 'bridge_fee_amount', kind: 'scalar', T: 1 /* ScalarType.DOUBLE */, opt: true },
    { no: 24, name: 'bridge_fee_decimal_amount', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
    { no: 25, name: 'executor_fee_amount', kind: 'scalar', T: 1 /* ScalarType.DOUBLE */, opt: true },
    { no: 26, name: 'executor_fee_decimal_amount', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
    { no: 27, name: 'bridge_fee_asset_address', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
    { no: 28, name: 'bridge_fee_asset_symbol', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
    { no: 29, name: 'bridge_fee_asset_decimals', kind: 'scalar', T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 30, name: 'executor_fee_asset_address', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
    { no: 31, name: 'executor_fee_asset_symbol', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
    { no: 32, name: 'executor_fee_asset_decimals', kind: 'scalar', T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 33, name: 'queued_transaction_hash', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
    { no: 34, name: 'included_transaction_hash', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
    { no: 35, name: 'src_chain_transaction_hash', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
    {
      no: 36,
      name: 'asset_approve_transaction_hash',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
      repeated: true,
    },
    { no: 37, name: 'error_message', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
    { no: 38, name: 'bridge_type', kind: 'enum', T: proto3.getEnumType(BridgeType) },
    { no: 39, name: 'status', kind: 'enum', T: proto3.getEnumType(DepositStatus) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Deposit {
    return new Deposit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Deposit {
    return new Deposit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Deposit {
    return new Deposit().fromJsonString(jsonString, options);
  }

  static equals(
    a: Deposit | PlainMessage<Deposit> | undefined,
    b: Deposit | PlainMessage<Deposit> | undefined,
  ): boolean {
    return proto3.util.equals(Deposit, a, b);
  }
}
