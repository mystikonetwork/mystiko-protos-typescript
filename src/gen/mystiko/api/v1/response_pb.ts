// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file mystiko/api/v1/response.proto (package mystiko.api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3 } from '@bufbuild/protobuf';

/**
 * @generated from enum mystiko.api.v1.MystikoError
 */
export enum MystikoError {
  /**
   * @generated from enum value: MYSTIKO_ERROR_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: MYSTIKO_ERROR_SYNCHRONIZER_ERROR = 1;
   */
  SYNCHRONIZER_ERROR = 1,

  /**
   * @generated from enum value: MYSTIKO_ERROR_SCANNER_ERROR = 2;
   */
  SCANNER_ERROR = 2,

  /**
   * @generated from enum value: MYSTIKO_ERROR_DATALOADER_ERROR = 3;
   */
  DATALOADER_ERROR = 3,

  /**
   * @generated from enum value: MYSTIKO_ERROR_CONFIG_ERROR = 4;
   */
  CONFIG_ERROR = 4,

  /**
   * @generated from enum value: MYSTIKO_ERROR_DATABASE_MIGRATION_ERROR = 5;
   */
  DATABASE_MIGRATION_ERROR = 5,

  /**
   * @generated from enum value: MYSTIKO_ERROR_INVALID_PROVIDER_URL_ERROR = 6;
   */
  INVALID_PROVIDER_URL_ERROR = 6,

  /**
   * @generated from enum value: MYSTIKO_ERROR_STORAGE_ERROR = 7;
   */
  STORAGE_ERROR = 7,

  /**
   * @generated from enum value: MYSTIKO_ERROR_RELAYER_CLIENT_ERROR = 8;
   */
  RELAYER_CLIENT_ERROR = 8,

  /**
   * @generated from enum value: MYSTIKO_ERROR_FILE_STATIC_CACHE_ERROR = 9;
   */
  FILE_STATIC_CACHE_ERROR = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(MystikoError)
proto3.util.setEnumType(MystikoError, 'mystiko.api.v1.MystikoError', [
  { no: 0, name: 'MYSTIKO_ERROR_UNSPECIFIED' },
  { no: 1, name: 'MYSTIKO_ERROR_SYNCHRONIZER_ERROR' },
  { no: 2, name: 'MYSTIKO_ERROR_SCANNER_ERROR' },
  { no: 3, name: 'MYSTIKO_ERROR_DATALOADER_ERROR' },
  { no: 4, name: 'MYSTIKO_ERROR_CONFIG_ERROR' },
  { no: 5, name: 'MYSTIKO_ERROR_DATABASE_MIGRATION_ERROR' },
  { no: 6, name: 'MYSTIKO_ERROR_INVALID_PROVIDER_URL_ERROR' },
  { no: 7, name: 'MYSTIKO_ERROR_STORAGE_ERROR' },
  { no: 8, name: 'MYSTIKO_ERROR_RELAYER_CLIENT_ERROR' },
  { no: 9, name: 'MYSTIKO_ERROR_FILE_STATIC_CACHE_ERROR' },
]);

/**
 * @generated from enum mystiko.api.v1.ConfigError
 */
export enum ConfigError {
  /**
   * @generated from enum value: CONFIG_ERROR_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CONFIG_ERROR_DESERIALIZE_MESSAGE_ERROR = 1;
   */
  DESERIALIZE_MESSAGE_ERROR = 1,

  /**
   * @generated from enum value: CONFIG_ERROR_GET_MYSTIKO_GUARD_ERROR = 2;
   */
  GET_MYSTIKO_GUARD_ERROR = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ConfigError)
proto3.util.setEnumType(ConfigError, 'mystiko.api.v1.ConfigError', [
  { no: 0, name: 'CONFIG_ERROR_UNSPECIFIED' },
  { no: 1, name: 'CONFIG_ERROR_DESERIALIZE_MESSAGE_ERROR' },
  { no: 2, name: 'CONFIG_ERROR_GET_MYSTIKO_GUARD_ERROR' },
]);

/**
 * @generated from enum mystiko.api.v1.AccountError
 */
export enum AccountError {
  /**
   * @generated from enum value: ACCOUNT_ERROR_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ACCOUNT_ERROR_STORAGE_ERROR = 1;
   */
  STORAGE_ERROR = 1,

  /**
   * @generated from enum value: ACCOUNT_ERROR_CRYPTO_ERROR = 2;
   */
  CRYPTO_ERROR = 2,

  /**
   * @generated from enum value: ACCOUNT_ERROR_MNEMONIC_ERROR = 3;
   */
  MNEMONIC_ERROR = 3,

  /**
   * @generated from enum value: ACCOUNT_ERROR_HEX_STRING_ERROR = 4;
   */
  HEX_STRING_ERROR = 4,

  /**
   * @generated from enum value: ACCOUNT_ERROR_NO_SUCH_ACCOUNT_ERROR = 5;
   */
  NO_SUCH_ACCOUNT_ERROR = 5,

  /**
   * @generated from enum value: ACCOUNT_ERROR_WALLETS_ERROR = 6;
   */
  WALLETS_ERROR = 6,

  /**
   * @generated from enum value: ACCOUNT_ERROR_GET_MYSTIKO_GUARD_ERROR = 7;
   */
  GET_MYSTIKO_GUARD_ERROR = 7,

  /**
   * @generated from enum value: ACCOUNT_ERROR_DESERIALIZE_MESSAGE_ERROR = 8;
   */
  DESERIALIZE_MESSAGE_ERROR = 8,

  /**
   * @generated from enum value: ACCOUNT_ERROR_PROTOCOL_KEY_ERROR = 9;
   */
  PROTOCOL_KEY_ERROR = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(AccountError)
proto3.util.setEnumType(AccountError, 'mystiko.api.v1.AccountError', [
  { no: 0, name: 'ACCOUNT_ERROR_UNSPECIFIED' },
  { no: 1, name: 'ACCOUNT_ERROR_STORAGE_ERROR' },
  { no: 2, name: 'ACCOUNT_ERROR_CRYPTO_ERROR' },
  { no: 3, name: 'ACCOUNT_ERROR_MNEMONIC_ERROR' },
  { no: 4, name: 'ACCOUNT_ERROR_HEX_STRING_ERROR' },
  { no: 5, name: 'ACCOUNT_ERROR_NO_SUCH_ACCOUNT_ERROR' },
  { no: 6, name: 'ACCOUNT_ERROR_WALLETS_ERROR' },
  { no: 7, name: 'ACCOUNT_ERROR_GET_MYSTIKO_GUARD_ERROR' },
  { no: 8, name: 'ACCOUNT_ERROR_DESERIALIZE_MESSAGE_ERROR' },
  { no: 9, name: 'ACCOUNT_ERROR_PROTOCOL_KEY_ERROR' },
]);

/**
 * @generated from enum mystiko.api.v1.WalletError
 */
export enum WalletError {
  /**
   * @generated from enum value: WALLET_ERROR_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: WALLET_ERROR_STORAGE_ERROR = 1;
   */
  STORAGE_ERROR = 1,

  /**
   * @generated from enum value: WALLET_ERROR_CRYPTO_ERROR = 2;
   */
  CRYPTO_ERROR = 2,

  /**
   * @generated from enum value: WALLET_ERROR_HEX_STRING_ERROR = 3;
   */
  HEX_STRING_ERROR = 3,

  /**
   * @generated from enum value: WALLET_ERROR_MNEMONIC_ERROR = 4;
   */
  MNEMONIC_ERROR = 4,

  /**
   * @generated from enum value: WALLET_ERROR_INVALID_PASSWORD_ERROR = 5;
   */
  INVALID_PASSWORD_ERROR = 5,

  /**
   * @generated from enum value: WALLET_ERROR_MISMATCHED_PASSWORD_ERROR = 6;
   */
  MISMATCHED_PASSWORD_ERROR = 6,

  /**
   * @generated from enum value: WALLET_ERROR_NO_EXISTING_WALLET_ERROR = 7;
   */
  NO_EXISTING_WALLET_ERROR = 7,

  /**
   * @generated from enum value: WALLET_ERROR_GET_MYSTIKO_GUARD_ERROR = 8;
   */
  GET_MYSTIKO_GUARD_ERROR = 8,

  /**
   * @generated from enum value: WALLET_ERROR_DESERIALIZE_MESSAGE_ERROR = 9;
   */
  DESERIALIZE_MESSAGE_ERROR = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(WalletError)
proto3.util.setEnumType(WalletError, 'mystiko.api.v1.WalletError', [
  { no: 0, name: 'WALLET_ERROR_UNSPECIFIED' },
  { no: 1, name: 'WALLET_ERROR_STORAGE_ERROR' },
  { no: 2, name: 'WALLET_ERROR_CRYPTO_ERROR' },
  { no: 3, name: 'WALLET_ERROR_HEX_STRING_ERROR' },
  { no: 4, name: 'WALLET_ERROR_MNEMONIC_ERROR' },
  { no: 5, name: 'WALLET_ERROR_INVALID_PASSWORD_ERROR' },
  { no: 6, name: 'WALLET_ERROR_MISMATCHED_PASSWORD_ERROR' },
  { no: 7, name: 'WALLET_ERROR_NO_EXISTING_WALLET_ERROR' },
  { no: 8, name: 'WALLET_ERROR_GET_MYSTIKO_GUARD_ERROR' },
  { no: 9, name: 'WALLET_ERROR_DESERIALIZE_MESSAGE_ERROR' },
]);

/**
 * @generated from enum mystiko.api.v1.DepositError
 */
export enum DepositError {
  /**
   * @generated from enum value: DEPOSIT_ERROR_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: DEPOSIT_ERROR_HEX_STRING_ERROR = 1;
   */
  HEX_STRING_ERROR = 1,

  /**
   * @generated from enum value: DEPOSIT_ERROR_FROM_DEC_STR_ERROR = 2;
   */
  FROM_DEC_STR_ERROR = 2,

  /**
   * @generated from enum value: DEPOSIT_ERROR_PARSE_BYTES_ERROR = 3;
   */
  PARSE_BYTES_ERROR = 3,

  /**
   * @generated from enum value: DEPOSIT_ERROR_PROVIDER_ERROR = 4;
   */
  PROVIDER_ERROR = 4,

  /**
   * @generated from enum value: DEPOSIT_ERROR_ANYHOW_ERROR = 5;
   */
  ANYHOW_ERROR = 5,

  /**
   * @generated from enum value: DEPOSIT_ERROR_PUBLIC_ASSETS_ERROR = 6;
   */
  PUBLIC_ASSETS_ERROR = 6,

  /**
   * @generated from enum value: DEPOSIT_ERROR_DEPOSIT_CONTRACTS_ERROR = 7;
   */
  DEPOSIT_CONTRACTS_ERROR = 7,

  /**
   * @generated from enum value: DEPOSIT_ERROR_COMMITMENT_POOL_CONTRACTS_ERROR = 8;
   */
  COMMITMENT_POOL_CONTRACTS_ERROR = 8,

  /**
   * @generated from enum value: DEPOSIT_ERROR_TRANSACTIONS_ERROR = 9;
   */
  TRANSACTIONS_ERROR = 9,

  /**
   * @generated from enum value: DEPOSIT_ERROR_PROTOCOL_ERROR = 10;
   */
  PROTOCOL_ERROR = 10,

  /**
   * @generated from enum value: DEPOSIT_ERROR_STORAGE_ERROR = 11;
   */
  STORAGE_ERROR = 11,

  /**
   * @generated from enum value: DEPOSIT_ERROR_PARSE_BIG_INT_ERROR = 12;
   */
  PARSE_BIG_INT_ERROR = 12,

  /**
   * @generated from enum value: DEPOSIT_ERROR_UNSUPPORTED_CHAIN_ID_ERROR = 13;
   */
  UNSUPPORTED_CHAIN_ID_ERROR = 13,

  /**
   * @generated from enum value: DEPOSIT_ERROR_NO_DEPOSIT_CONTRACT_FOUND_ERROR = 14;
   */
  NO_DEPOSIT_CONTRACT_FOUND_ERROR = 14,

  /**
   * @generated from enum value: DEPOSIT_ERROR_INVALID_DEPOSIT_AMOUNT_ERROR = 15;
   */
  INVALID_DEPOSIT_AMOUNT_ERROR = 15,

  /**
   * @generated from enum value: DEPOSIT_ERROR_INVALID_ROLLUP_FEE_AMOUNT_ERROR = 16;
   */
  INVALID_ROLLUP_FEE_AMOUNT_ERROR = 16,

  /**
   * @generated from enum value: DEPOSIT_ERROR_INVALID_BRIDGE_FEE_AMOUNT_ERROR = 17;
   */
  INVALID_BRIDGE_FEE_AMOUNT_ERROR = 17,

  /**
   * @generated from enum value: DEPOSIT_ERROR_INVALID_EXECUTOR_FEE_AMOUNT_ERROR = 18;
   */
  INVALID_EXECUTOR_FEE_AMOUNT_ERROR = 18,

  /**
   * @generated from enum value: DEPOSIT_ERROR_INSUFFICIENT_BALANCE_ERROR = 19;
   */
  INSUFFICIENT_BALANCE_ERROR = 19,

  /**
   * @generated from enum value: DEPOSIT_ERROR_ID_NOT_FOUND_ERROR = 20;
   */
  ID_NOT_FOUND_ERROR = 20,

  /**
   * @generated from enum value: DEPOSIT_ERROR_MISSING_PRIVATE_KEY_ERROR = 21;
   */
  MISSING_PRIVATE_KEY_ERROR = 21,

  /**
   * @generated from enum value: DEPOSIT_ERROR_DEPOSIT_STATUS_ERROR = 22;
   */
  DEPOSIT_STATUS_ERROR = 22,

  /**
   * @generated from enum value: DEPOSIT_ERROR_DUPLICATE_COMMITMENT_ERROR = 23;
   */
  DUPLICATE_COMMITMENT_ERROR = 23,

  /**
   * @generated from enum value: DEPOSIT_ERROR_WALLETS_ERROR = 24;
   */
  WALLETS_ERROR = 24,

  /**
   * @generated from enum value: DEPOSIT_ERROR_ACCOUNTS_ERROR = 25;
   */
  ACCOUNTS_ERROR = 25,

  /**
   * @generated from enum value: DEPOSIT_ERROR_GET_MYSTIKO_GUARD_ERROR = 26;
   */
  GET_MYSTIKO_GUARD_ERROR = 26,

  /**
   * @generated from enum value: DEPOSIT_ERROR_DESERIALIZE_MESSAGE_ERROR = 27;
   */
  DESERIALIZE_MESSAGE_ERROR = 27,

  /**
   * @generated from enum value: DEPOSIT_ERROR_PROTOCOL_KEY_ERROR = 28;
   */
  PROTOCOL_KEY_ERROR = 28,

  /**
   * @generated from enum value: DEPOSIT_ERROR_GRPC_CONNECT_ERROR = 29;
   */
  GRPC_CONNECT_ERROR = 29,
}
// Retrieve enum metadata with: proto3.getEnumType(DepositError)
proto3.util.setEnumType(DepositError, 'mystiko.api.v1.DepositError', [
  { no: 0, name: 'DEPOSIT_ERROR_UNSPECIFIED' },
  { no: 1, name: 'DEPOSIT_ERROR_HEX_STRING_ERROR' },
  { no: 2, name: 'DEPOSIT_ERROR_FROM_DEC_STR_ERROR' },
  { no: 3, name: 'DEPOSIT_ERROR_PARSE_BYTES_ERROR' },
  { no: 4, name: 'DEPOSIT_ERROR_PROVIDER_ERROR' },
  { no: 5, name: 'DEPOSIT_ERROR_ANYHOW_ERROR' },
  { no: 6, name: 'DEPOSIT_ERROR_PUBLIC_ASSETS_ERROR' },
  { no: 7, name: 'DEPOSIT_ERROR_DEPOSIT_CONTRACTS_ERROR' },
  { no: 8, name: 'DEPOSIT_ERROR_COMMITMENT_POOL_CONTRACTS_ERROR' },
  { no: 9, name: 'DEPOSIT_ERROR_TRANSACTIONS_ERROR' },
  { no: 10, name: 'DEPOSIT_ERROR_PROTOCOL_ERROR' },
  { no: 11, name: 'DEPOSIT_ERROR_STORAGE_ERROR' },
  { no: 12, name: 'DEPOSIT_ERROR_PARSE_BIG_INT_ERROR' },
  { no: 13, name: 'DEPOSIT_ERROR_UNSUPPORTED_CHAIN_ID_ERROR' },
  { no: 14, name: 'DEPOSIT_ERROR_NO_DEPOSIT_CONTRACT_FOUND_ERROR' },
  { no: 15, name: 'DEPOSIT_ERROR_INVALID_DEPOSIT_AMOUNT_ERROR' },
  { no: 16, name: 'DEPOSIT_ERROR_INVALID_ROLLUP_FEE_AMOUNT_ERROR' },
  { no: 17, name: 'DEPOSIT_ERROR_INVALID_BRIDGE_FEE_AMOUNT_ERROR' },
  { no: 18, name: 'DEPOSIT_ERROR_INVALID_EXECUTOR_FEE_AMOUNT_ERROR' },
  { no: 19, name: 'DEPOSIT_ERROR_INSUFFICIENT_BALANCE_ERROR' },
  { no: 20, name: 'DEPOSIT_ERROR_ID_NOT_FOUND_ERROR' },
  { no: 21, name: 'DEPOSIT_ERROR_MISSING_PRIVATE_KEY_ERROR' },
  { no: 22, name: 'DEPOSIT_ERROR_DEPOSIT_STATUS_ERROR' },
  { no: 23, name: 'DEPOSIT_ERROR_DUPLICATE_COMMITMENT_ERROR' },
  { no: 24, name: 'DEPOSIT_ERROR_WALLETS_ERROR' },
  { no: 25, name: 'DEPOSIT_ERROR_ACCOUNTS_ERROR' },
  { no: 26, name: 'DEPOSIT_ERROR_GET_MYSTIKO_GUARD_ERROR' },
  { no: 27, name: 'DEPOSIT_ERROR_DESERIALIZE_MESSAGE_ERROR' },
  { no: 28, name: 'DEPOSIT_ERROR_PROTOCOL_KEY_ERROR' },
  { no: 29, name: 'DEPOSIT_ERROR_GRPC_CONNECT_ERROR' },
]);

/**
 * @generated from enum mystiko.api.v1.SpendError
 */
export enum SpendError {
  /**
   * @generated from enum value: SPEND_ERROR_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SPEND_ERROR_ANYHOW_ERROR = 1;
   */
  ANYHOW_ERROR = 1,

  /**
   * @generated from enum value: SPEND_ERROR_PUBLIC_ASSETS_ERROR = 2;
   */
  PUBLIC_ASSETS_ERROR = 2,

  /**
   * @generated from enum value: SPEND_ERROR_COMMITMENT_POOL_CONTRACTS_ERROR = 3;
   */
  COMMITMENT_POOL_CONTRACTS_ERROR = 3,

  /**
   * @generated from enum value: SPEND_ERROR_TRANSACTIONS_ERROR = 4;
   */
  TRANSACTIONS_ERROR = 4,

  /**
   * @generated from enum value: SPEND_ERROR_STORAGE_ERROR = 5;
   */
  STORAGE_ERROR = 5,

  /**
   * @generated from enum value: SPEND_ERROR_WALLETS_ERROR = 6;
   */
  WALLETS_ERROR = 6,

  /**
   * @generated from enum value: SPEND_ERROR_ACCOUNTS_ERROR = 7;
   */
  ACCOUNTS_ERROR = 7,

  /**
   * @generated from enum value: SPEND_ERROR_RELAYER_CLIENT_ERROR = 8;
   */
  RELAYER_CLIENT_ERROR = 8,

  /**
   * @generated from enum value: SPEND_ERROR_HEX_STRING_ERROR = 9;
   */
  HEX_STRING_ERROR = 9,

  /**
   * @generated from enum value: SPEND_ERROR_PARSE_BIG_INT_ERROR = 10;
   */
  PARSE_BIG_INT_ERROR = 10,

  /**
   * @generated from enum value: SPEND_ERROR_PROTOCOL_ERROR = 11;
   */
  PROTOCOL_ERROR = 11,

  /**
   * @generated from enum value: SPEND_ERROR_PROTOCOL_KEY_ERROR = 12;
   */
  PROTOCOL_KEY_ERROR = 12,

  /**
   * @generated from enum value: SPEND_ERROR_CRYPTO_ERROR = 13;
   */
  CRYPTO_ERROR = 13,

  /**
   * @generated from enum value: SPEND_ERROR_MERKLE_TREE_ERROR = 14;
   */
  MERKLE_TREE_ERROR = 14,

  /**
   * @generated from enum value: SPEND_ERROR_G16_PROVER_ERROR = 15;
   */
  G16_PROVER_ERROR = 15,

  /**
   * @generated from enum value: SPEND_ERROR_LOCAL_WALLET_ERROR = 16;
   */
  LOCAL_WALLET_ERROR = 16,

  /**
   * @generated from enum value: SPEND_ERROR_SERDE_JSON_ERROR = 17;
   */
  SERDE_JSON_ERROR = 17,

  /**
   * @generated from enum value: SPEND_ERROR_NO_POOL_CONTRACT_FOUND_ERROR = 18;
   */
  NO_POOL_CONTRACT_FOUND_ERROR = 18,

  /**
   * @generated from enum value: SPEND_ERROR_NO_POOL_CONTRACT_ADDRESS_FOUND_ERROR = 19;
   */
  NO_POOL_CONTRACT_ADDRESS_FOUND_ERROR = 19,

  /**
   * @generated from enum value: SPEND_ERROR_MISSING_PRIVATE_KEY_ERROR = 20;
   */
  MISSING_PRIVATE_KEY_ERROR = 20,

  /**
   * @generated from enum value: SPEND_ERROR_UNSUPPORTED_CHAIN_ID_ERROR = 21;
   */
  UNSUPPORTED_CHAIN_ID_ERROR = 21,

  /**
   * @generated from enum value: SPEND_ERROR_UNSUPPORTED_SPEND_JOIN_SPLIT_TYPE_ERROR = 22;
   */
  UNSUPPORTED_SPEND_JOIN_SPLIT_TYPE_ERROR = 22,

  /**
   * @generated from enum value: SPEND_ERROR_INVALID_CREATE_OPTIONS_ERROR = 23;
   */
  INVALID_CREATE_OPTIONS_ERROR = 23,

  /**
   * @generated from enum value: SPEND_ERROR_INVALID_PUBLIC_ADDRESS_ERROR = 24;
   */
  INVALID_PUBLIC_ADDRESS_ERROR = 24,

  /**
   * @generated from enum value: SPEND_ERROR_INVALID_MYSTIKO_ADDRESS_ERROR = 25;
   */
  INVALID_MYSTIKO_ADDRESS_ERROR = 25,

  /**
   * @generated from enum value: SPEND_ERROR_INVALID_AMOUNT_ERROR = 26;
   */
  INVALID_AMOUNT_ERROR = 26,

  /**
   * @generated from enum value: SPEND_ERROR_INVALID_ROLLUP_FEE_AMOUNT_ERROR = 27;
   */
  INVALID_ROLLUP_FEE_AMOUNT_ERROR = 27,

  /**
   * @generated from enum value: SPEND_ERROR_INSUFFICIENT_POOL_BALANCE_ERROR = 28;
   */
  INSUFFICIENT_POOL_BALANCE_ERROR = 28,

  /**
   * @generated from enum value: SPEND_ERROR_UNKNOWN_MERKLE_ROOT_ERROR = 29;
   */
  UNKNOWN_MERKLE_ROOT_ERROR = 29,

  /**
   * @generated from enum value: SPEND_ERROR_ALREADY_SPENT_COMMITMENT_ERROR = 30;
   */
  ALREADY_SPENT_COMMITMENT_ERROR = 30,

  /**
   * @generated from enum value: SPEND_ERROR_MISSING_SHIELDED_ADDRESS_IN_COMMITMENT_ERROR = 31;
   */
  MISSING_SHIELDED_ADDRESS_IN_COMMITMENT_ERROR = 31,

  /**
   * @generated from enum value: SPEND_ERROR_MISSING_ENCRYPTED_NOTE_IN_COMMITMENT_ERROR = 32;
   */
  MISSING_ENCRYPTED_NOTE_IN_COMMITMENT_ERROR = 32,

  /**
   * @generated from enum value: SPEND_ERROR_MISSING_COMMITMENT_IN_MERKLE_TREE = 33;
   */
  MISSING_COMMITMENT_IN_MERKLE_TREE = 33,

  /**
   * @generated from enum value: SPEND_ERROR_NON_OWNED_SHIELDED_ADDRESS_ERROR = 34;
   */
  NON_OWNED_SHIELDED_ADDRESS_ERROR = 34,

  /**
   * @generated from enum value: SPEND_ERROR_MISSING_CIRCUIT_TYPE_IN_CONFIG_ERROR = 35;
   */
  MISSING_CIRCUIT_TYPE_IN_CONFIG_ERROR = 35,

  /**
   * @generated from enum value: SPEND_ERROR_INVALID_ZK_PROOF_ERROR = 36;
   */
  INVALID_ZK_PROOF_ERROR = 36,

  /**
   * @generated from enum value: SPEND_ERROR_SPEND_NOT_FOUND_ERROR = 37;
   */
  SPEND_NOT_FOUND_ERROR = 37,

  /**
   * @generated from enum value: SPEND_ERROR_SPEND_STATUS_ERROR = 38;
   */
  SPEND_STATUS_ERROR = 38,

  /**
   * @generated from enum value: SPEND_ERROR_MISSING_GIVEN_RELAYER_ERROR = 39;
   */
  MISSING_GIVEN_RELAYER_ERROR = 39,

  /**
   * @generated from enum value: SPEND_ERROR_MISSING_TRANSACTION_HASH_FROM_RELAYER_JOB_ERROR = 40;
   */
  MISSING_TRANSACTION_HASH_FROM_RELAYER_JOB_ERROR = 40,

  /**
   * @generated from enum value: SPEND_ERROR_GET_MYSTIKO_GUARD_ERROR = 41;
   */
  GET_MYSTIKO_GUARD_ERROR = 41,

  /**
   * @generated from enum value: SPEND_ERROR_DESERIALIZE_MESSAGE_ERROR = 42;
   */
  DESERIALIZE_MESSAGE_ERROR = 42,

  /**
   * @generated from enum value: SPEND_ERROR_GRPC_CONNECT_ERROR = 43;
   */
  GRPC_CONNECT_ERROR = 43,

  /**
   * @generated from enum value: SPEND_ERROR_STD_IO_ERROR = 44;
   */
  STD_IO_ERROR = 44,

  /**
   * @generated from enum value: SPEND_ERROR_PROTOS_ERROR = 45;
   */
  PROTOS_ERROR = 45,

  /**
   * @generated from enum value: SPEND_ERROR_FETCHER_ERROR = 46;
   */
  FETCHER_ERROR = 46,

  /**
   * @generated from enum value: SPEND_ERROR_MISSING_RESOURCE_ERROR = 47;
   */
  MISSING_RESOURCE_ERROR = 47,

  /**
   * @generated from enum value: SPEND_ERROR_RAW_RESOURCE_ERROR = 48;
   */
  RAW_RESOURCE_ERROR = 48,

  /**
   * @generated from enum value: SPEND_ERROR_FETCH_FROM_PROVIDER_ERROR = 49;
   */
  FETCH_FROM_PROVIDER_ERROR = 49,
}
// Retrieve enum metadata with: proto3.getEnumType(SpendError)
proto3.util.setEnumType(SpendError, 'mystiko.api.v1.SpendError', [
  { no: 0, name: 'SPEND_ERROR_UNSPECIFIED' },
  { no: 1, name: 'SPEND_ERROR_ANYHOW_ERROR' },
  { no: 2, name: 'SPEND_ERROR_PUBLIC_ASSETS_ERROR' },
  { no: 3, name: 'SPEND_ERROR_COMMITMENT_POOL_CONTRACTS_ERROR' },
  { no: 4, name: 'SPEND_ERROR_TRANSACTIONS_ERROR' },
  { no: 5, name: 'SPEND_ERROR_STORAGE_ERROR' },
  { no: 6, name: 'SPEND_ERROR_WALLETS_ERROR' },
  { no: 7, name: 'SPEND_ERROR_ACCOUNTS_ERROR' },
  { no: 8, name: 'SPEND_ERROR_RELAYER_CLIENT_ERROR' },
  { no: 9, name: 'SPEND_ERROR_HEX_STRING_ERROR' },
  { no: 10, name: 'SPEND_ERROR_PARSE_BIG_INT_ERROR' },
  { no: 11, name: 'SPEND_ERROR_PROTOCOL_ERROR' },
  { no: 12, name: 'SPEND_ERROR_PROTOCOL_KEY_ERROR' },
  { no: 13, name: 'SPEND_ERROR_CRYPTO_ERROR' },
  { no: 14, name: 'SPEND_ERROR_MERKLE_TREE_ERROR' },
  { no: 15, name: 'SPEND_ERROR_G16_PROVER_ERROR' },
  { no: 16, name: 'SPEND_ERROR_LOCAL_WALLET_ERROR' },
  { no: 17, name: 'SPEND_ERROR_SERDE_JSON_ERROR' },
  { no: 18, name: 'SPEND_ERROR_NO_POOL_CONTRACT_FOUND_ERROR' },
  { no: 19, name: 'SPEND_ERROR_NO_POOL_CONTRACT_ADDRESS_FOUND_ERROR' },
  { no: 20, name: 'SPEND_ERROR_MISSING_PRIVATE_KEY_ERROR' },
  { no: 21, name: 'SPEND_ERROR_UNSUPPORTED_CHAIN_ID_ERROR' },
  { no: 22, name: 'SPEND_ERROR_UNSUPPORTED_SPEND_JOIN_SPLIT_TYPE_ERROR' },
  { no: 23, name: 'SPEND_ERROR_INVALID_CREATE_OPTIONS_ERROR' },
  { no: 24, name: 'SPEND_ERROR_INVALID_PUBLIC_ADDRESS_ERROR' },
  { no: 25, name: 'SPEND_ERROR_INVALID_MYSTIKO_ADDRESS_ERROR' },
  { no: 26, name: 'SPEND_ERROR_INVALID_AMOUNT_ERROR' },
  { no: 27, name: 'SPEND_ERROR_INVALID_ROLLUP_FEE_AMOUNT_ERROR' },
  { no: 28, name: 'SPEND_ERROR_INSUFFICIENT_POOL_BALANCE_ERROR' },
  { no: 29, name: 'SPEND_ERROR_UNKNOWN_MERKLE_ROOT_ERROR' },
  { no: 30, name: 'SPEND_ERROR_ALREADY_SPENT_COMMITMENT_ERROR' },
  { no: 31, name: 'SPEND_ERROR_MISSING_SHIELDED_ADDRESS_IN_COMMITMENT_ERROR' },
  { no: 32, name: 'SPEND_ERROR_MISSING_ENCRYPTED_NOTE_IN_COMMITMENT_ERROR' },
  { no: 33, name: 'SPEND_ERROR_MISSING_COMMITMENT_IN_MERKLE_TREE' },
  { no: 34, name: 'SPEND_ERROR_NON_OWNED_SHIELDED_ADDRESS_ERROR' },
  { no: 35, name: 'SPEND_ERROR_MISSING_CIRCUIT_TYPE_IN_CONFIG_ERROR' },
  { no: 36, name: 'SPEND_ERROR_INVALID_ZK_PROOF_ERROR' },
  { no: 37, name: 'SPEND_ERROR_SPEND_NOT_FOUND_ERROR' },
  { no: 38, name: 'SPEND_ERROR_SPEND_STATUS_ERROR' },
  { no: 39, name: 'SPEND_ERROR_MISSING_GIVEN_RELAYER_ERROR' },
  { no: 40, name: 'SPEND_ERROR_MISSING_TRANSACTION_HASH_FROM_RELAYER_JOB_ERROR' },
  { no: 41, name: 'SPEND_ERROR_GET_MYSTIKO_GUARD_ERROR' },
  { no: 42, name: 'SPEND_ERROR_DESERIALIZE_MESSAGE_ERROR' },
  { no: 43, name: 'SPEND_ERROR_GRPC_CONNECT_ERROR' },
  { no: 44, name: 'SPEND_ERROR_STD_IO_ERROR' },
  { no: 45, name: 'SPEND_ERROR_PROTOS_ERROR' },
  { no: 46, name: 'SPEND_ERROR_FETCHER_ERROR' },
  { no: 47, name: 'SPEND_ERROR_MISSING_RESOURCE_ERROR' },
  { no: 48, name: 'SPEND_ERROR_RAW_RESOURCE_ERROR' },
  { no: 49, name: 'SPEND_ERROR_FETCH_FROM_PROVIDER_ERROR' },
]);

/**
 * @generated from enum mystiko.api.v1.ScannerError
 */
export enum ScannerError {
  /**
   * @generated from enum value: SCANNER_ERROR_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SCANNER_ERROR_NO_SUCH_ACCOUNT_ERROR = 1;
   */
  NO_SUCH_ACCOUNT_ERROR = 1,

  /**
   * @generated from enum value: SCANNER_ERROR_NO_SUCH_CONTRACT_CONFIG_ERROR = 2;
   */
  NO_SUCH_CONTRACT_CONFIG_ERROR = 2,

  /**
   * @generated from enum value: SCANNER_ERROR_COMMITMENT_EMPTY_ERROR = 3;
   */
  COMMITMENT_EMPTY_ERROR = 3,

  /**
   * @generated from enum value: SCANNER_ERROR_CRYPTO_ERROR = 4;
   */
  CRYPTO_ERROR = 4,

  /**
   * @generated from enum value: SCANNER_ERROR_STORAGE_ERROR = 5;
   */
  STORAGE_ERROR = 5,

  /**
   * @generated from enum value: SCANNER_ERROR_JOIN_ERROR = 6;
   */
  JOIN_ERROR = 6,

  /**
   * @generated from enum value: SCANNER_ERROR_PROTOCOL_ERROR = 7;
   */
  PROTOCOL_ERROR = 7,

  /**
   * @generated from enum value: SCANNER_ERROR_FROM_HEX_ERROR = 8;
   */
  FROM_HEX_ERROR = 8,

  /**
   * @generated from enum value: SCANNER_ERROR_ANYHOW_ERROR = 9;
   */
  ANYHOW_ERROR = 9,

  /**
   * @generated from enum value: SCANNER_ERROR_ACCOUNT_HANDLER_ERROR = 10;
   */
  ACCOUNT_HANDLER_ERROR = 10,

  /**
   * @generated from enum value: SCANNER_ERROR_WALLET_HANDLER_ERROR = 11;
   */
  WALLET_HANDLER_ERROR = 11,

  /**
   * @generated from enum value: SCANNER_ERROR_GET_MYSTIKO_GUARD_ERROR = 12;
   */
  GET_MYSTIKO_GUARD_ERROR = 12,

  /**
   * @generated from enum value: SCANNER_ERROR_DESERIALIZE_MESSAGE_ERROR = 13;
   */
  DESERIALIZE_MESSAGE_ERROR = 13,

  /**
   * @generated from enum value: SCANNER_ERROR_PROTOCOL_KEY_ERROR = 14;
   */
  PROTOCOL_KEY_ERROR = 14,

  /**
   * @generated from enum value: SCANNER_ERROR_PROVIDER_ERROR = 15;
   */
  PROVIDER_ERROR = 15,

  /**
   * @generated from enum value: SCANNER_ERROR_COMMITMENT_POOL_CONTRACTS_ERROR = 16;
   */
  COMMITMENT_POOL_CONTRACTS_ERROR = 16,
}
// Retrieve enum metadata with: proto3.getEnumType(ScannerError)
proto3.util.setEnumType(ScannerError, 'mystiko.api.v1.ScannerError', [
  { no: 0, name: 'SCANNER_ERROR_UNSPECIFIED' },
  { no: 1, name: 'SCANNER_ERROR_NO_SUCH_ACCOUNT_ERROR' },
  { no: 2, name: 'SCANNER_ERROR_NO_SUCH_CONTRACT_CONFIG_ERROR' },
  { no: 3, name: 'SCANNER_ERROR_COMMITMENT_EMPTY_ERROR' },
  { no: 4, name: 'SCANNER_ERROR_CRYPTO_ERROR' },
  { no: 5, name: 'SCANNER_ERROR_STORAGE_ERROR' },
  { no: 6, name: 'SCANNER_ERROR_JOIN_ERROR' },
  { no: 7, name: 'SCANNER_ERROR_PROTOCOL_ERROR' },
  { no: 8, name: 'SCANNER_ERROR_FROM_HEX_ERROR' },
  { no: 9, name: 'SCANNER_ERROR_ANYHOW_ERROR' },
  { no: 10, name: 'SCANNER_ERROR_ACCOUNT_HANDLER_ERROR' },
  { no: 11, name: 'SCANNER_ERROR_WALLET_HANDLER_ERROR' },
  { no: 12, name: 'SCANNER_ERROR_GET_MYSTIKO_GUARD_ERROR' },
  { no: 13, name: 'SCANNER_ERROR_DESERIALIZE_MESSAGE_ERROR' },
  { no: 14, name: 'SCANNER_ERROR_PROTOCOL_KEY_ERROR' },
  { no: 15, name: 'SCANNER_ERROR_PROVIDER_ERROR' },
  { no: 16, name: 'SCANNER_ERROR_COMMITMENT_POOL_CONTRACTS_ERROR' },
]);

/**
 * @generated from enum mystiko.api.v1.SynchronizerError
 */
export enum SynchronizerError {
  /**
   * @generated from enum value: SYNCHRONIZER_ERROR_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SYNCHRONIZER_ERROR_UNSUPPORTED_CHAIN_ERROR = 1;
   */
  UNSUPPORTED_CHAIN_ERROR = 1,

  /**
   * @generated from enum value: SYNCHRONIZER_ERROR_DATALOADER_ERROR = 2;
   */
  DATALOADER_ERROR = 2,

  /**
   * @generated from enum value: SYNCHRONIZER_ERROR_DATALOADER_CONFIG_ERROR = 3;
   */
  DATALOADER_CONFIG_ERROR = 3,

  /**
   * @generated from enum value: SYNCHRONIZER_ERROR_ANYHOW_ERROR = 4;
   */
  ANYHOW_ERROR = 4,

  /**
   * @generated from enum value: SYNCHRONIZER_ERROR_GET_MYSTIKO_GUARD_ERROR = 5;
   */
  GET_MYSTIKO_GUARD_ERROR = 5,

  /**
   * @generated from enum value: SYNCHRONIZER_ERROR_DESERIALIZE_MESSAGE_ERROR = 6;
   */
  DESERIALIZE_MESSAGE_ERROR = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(SynchronizerError)
proto3.util.setEnumType(SynchronizerError, 'mystiko.api.v1.SynchronizerError', [
  { no: 0, name: 'SYNCHRONIZER_ERROR_UNSPECIFIED' },
  { no: 1, name: 'SYNCHRONIZER_ERROR_UNSUPPORTED_CHAIN_ERROR' },
  { no: 2, name: 'SYNCHRONIZER_ERROR_DATALOADER_ERROR' },
  { no: 3, name: 'SYNCHRONIZER_ERROR_DATALOADER_CONFIG_ERROR' },
  { no: 4, name: 'SYNCHRONIZER_ERROR_ANYHOW_ERROR' },
  { no: 5, name: 'SYNCHRONIZER_ERROR_GET_MYSTIKO_GUARD_ERROR' },
  { no: 6, name: 'SYNCHRONIZER_ERROR_DESERIALIZE_MESSAGE_ERROR' },
]);

/**
 * @generated from message mystiko.api.v1.ApiResponse
 */
export class ApiResponse extends Message<ApiResponse> {
  /**
   * @generated from field: mystiko.api.v1.StatusCode code = 1;
   */
  code?: StatusCode;

  /**
   * @generated from oneof mystiko.api.v1.ApiResponse.result
   */
  result:
    | {
        /**
         * @generated from field: bytes data = 2;
         */
        value: Uint8Array;
        case: 'data';
      }
    | {
        /**
         * @generated from field: string error_message = 3;
         */
        value: string;
        case: 'errorMessage';
      }
    | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ApiResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'mystiko.api.v1.ApiResponse';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'code', kind: 'message', T: StatusCode },
    { no: 2, name: 'data', kind: 'scalar', T: 12 /* ScalarType.BYTES */, oneof: 'result' },
    { no: 3, name: 'error_message', kind: 'scalar', T: 9 /* ScalarType.STRING */, oneof: 'result' },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiResponse {
    return new ApiResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiResponse {
    return new ApiResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiResponse {
    return new ApiResponse().fromJsonString(jsonString, options);
  }

  static equals(
    a: ApiResponse | PlainMessage<ApiResponse> | undefined,
    b: ApiResponse | PlainMessage<ApiResponse> | undefined,
  ): boolean {
    return proto3.util.equals(ApiResponse, a, b);
  }
}

/**
 * @generated from message mystiko.api.v1.StatusCode
 */
export class StatusCode extends Message<StatusCode> {
  /**
   * @generated from field: bool success = 1;
   */
  success = false;

  /**
   * @generated from oneof mystiko.api.v1.StatusCode.error
   */
  error:
    | {
        /**
         * @generated from field: mystiko.api.v1.MystikoError mystiko = 2;
         */
        value: MystikoError;
        case: 'mystiko';
      }
    | {
        /**
         * @generated from field: mystiko.api.v1.WalletError wallet = 3;
         */
        value: WalletError;
        case: 'wallet';
      }
    | {
        /**
         * @generated from field: mystiko.api.v1.AccountError account = 4;
         */
        value: AccountError;
        case: 'account';
      }
    | {
        /**
         * @generated from field: mystiko.api.v1.DepositError deposit = 5;
         */
        value: DepositError;
        case: 'deposit';
      }
    | {
        /**
         * @generated from field: mystiko.api.v1.ScannerError scanner = 6;
         */
        value: ScannerError;
        case: 'scanner';
      }
    | {
        /**
         * @generated from field: mystiko.api.v1.SynchronizerError synchronizer = 7;
         */
        value: SynchronizerError;
        case: 'synchronizer';
      }
    | {
        /**
         * @generated from field: mystiko.api.v1.ConfigError config = 8;
         */
        value: ConfigError;
        case: 'config';
      }
    | {
        /**
         * @generated from field: mystiko.api.v1.SpendError spend = 9;
         */
        value: SpendError;
        case: 'spend';
      }
    | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'mystiko.api.v1.StatusCode';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'success', kind: 'scalar', T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: 'mystiko', kind: 'enum', T: proto3.getEnumType(MystikoError), oneof: 'error' },
    { no: 3, name: 'wallet', kind: 'enum', T: proto3.getEnumType(WalletError), oneof: 'error' },
    { no: 4, name: 'account', kind: 'enum', T: proto3.getEnumType(AccountError), oneof: 'error' },
    { no: 5, name: 'deposit', kind: 'enum', T: proto3.getEnumType(DepositError), oneof: 'error' },
    { no: 6, name: 'scanner', kind: 'enum', T: proto3.getEnumType(ScannerError), oneof: 'error' },
    { no: 7, name: 'synchronizer', kind: 'enum', T: proto3.getEnumType(SynchronizerError), oneof: 'error' },
    { no: 8, name: 'config', kind: 'enum', T: proto3.getEnumType(ConfigError), oneof: 'error' },
    { no: 9, name: 'spend', kind: 'enum', T: proto3.getEnumType(SpendError), oneof: 'error' },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StatusCode {
    return new StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StatusCode {
    return new StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StatusCode {
    return new StatusCode().fromJsonString(jsonString, options);
  }

  static equals(
    a: StatusCode | PlainMessage<StatusCode> | undefined,
    b: StatusCode | PlainMessage<StatusCode> | undefined,
  ): boolean {
    return proto3.util.equals(StatusCode, a, b);
  }
}
