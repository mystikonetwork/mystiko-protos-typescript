// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file mystiko/screening/v1/client.proto (package mystiko.screening.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3 } from '@bufbuild/protobuf';

/**
 * @generated from message mystiko.screening.v1.ScreeningClientOptions
 */
export class ScreeningClientOptions extends Message<ScreeningClientOptions> {
  /**
   * @generated from field: optional uint64 timeout_ms = 1;
   */
  timeoutMs?: bigint;

  /**
   * @generated from field: optional string screening_config_api_url = 2;
   */
  screeningConfigApiUrl?: string;

  constructor(data?: PartialMessage<ScreeningClientOptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'mystiko.screening.v1.ScreeningClientOptions';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'timeout_ms', kind: 'scalar', T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: 'screening_config_api_url', kind: 'scalar', T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScreeningClientOptions {
    return new ScreeningClientOptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScreeningClientOptions {
    return new ScreeningClientOptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScreeningClientOptions {
    return new ScreeningClientOptions().fromJsonString(jsonString, options);
  }

  static equals(
    a: ScreeningClientOptions | PlainMessage<ScreeningClientOptions> | undefined,
    b: ScreeningClientOptions | PlainMessage<ScreeningClientOptions> | undefined,
  ): boolean {
    return proto3.util.equals(ScreeningClientOptions, a, b);
  }
}
